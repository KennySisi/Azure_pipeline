# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  # push:
  #   branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # - name: Install Dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt

      - name: code style check
        run: flake8 .\azure_pipeline\ 

      - name: Build Python Package
        run: |
          python setup.py sdist --formats=zip

      # Runs a single command using the runners shell
      - name: build the docker image
        run: |
          docker build -t fastapi . 

      # Runs a set of commands using the runners shell
      - name: show the image list before
        run: |
          docker image list

  depoly:
    # The type of runner that the job will run on
    runs-on: self-hosted
    
    steps:

      - name: push the docker image to docker hub
        run: |
          echo push dokcer image to docker hub
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker tag fastapi mly219blueheart/fastapi:latest
          docker tag fastapi mly219blueheart/fastapi:${{ github.run_number }}
          docker push mly219blueheart/fastapi:latest
          docker push mly219blueheart/fastapi:${{ github.run_number }}

      - name: show the image list after
        run: |
          docker image prune -f
          docker image list

      # - name: run the image in the background
      #   run: |
      #     docker run -p 8000:8000 -d fastapi${{ github.run_number }}

      - name: run the terraform to create the server VM to run docker image
        run: |
          cd terraform
          echo "kenny debug"
          echo %cd%
          terraform refresh
          sleep 20
          terraform init
          sleep 20
          terraform plan
          sleep 20
          terraform apply -auto-approve
          sleep 20
          echo "kenny debug"
          echo %cd%
          terraform refresh
          sleep 20
          terraform output public_ip_address

